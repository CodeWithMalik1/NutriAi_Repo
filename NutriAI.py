# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eHQb9PMl3leEtaoGxGsjHyFxGmIYS1Ey
"""

# Install necessary libraries
!pip install transformers
!pip install requests
!pip install pandas
!pip install ipywidgets

# Importing necessary libraries
from transformers import pipeline
import pandas as pd
import ipywidgets as widgets
from IPython.display import display, HTML

# Function to get nutritional info using Hugging Face's pre-trained model
def get_nutritional_info_huggingface(food_item):
    # Use a pre-trained question answering model from Hugging Face
    model_name = "deepset/roberta-base-squad2"  # Model suitable for question answering
    nlp_model = pipeline('question-answering', model=model_name)

    # Define a hypothetical context related to the food item (you can customize context more)
    context = f"{food_item} is a healthy food that is rich in nutrients. It contains vitamins, minerals, fiber, and antioxidants. An average serving contains around 100 calories, some carbohydrates, protein, and very little fat."

    # Asking the model a question about the food item
    result = nlp_model(question=f"What are the nutrients in {food_item}?", context=context)

    return result['answer']

# Function to suggest diet plans based on user's preference
def suggest_diet(preference):
    diet_plan = {
        'vegetarian': ["Breakfast: Oatmeal with fruits",
                       "Lunch: Veggie salad with quinoa",
                       "Dinner: Lentil stew with brown rice"],
        'vegan': ["Breakfast: Smoothie with almond milk and berries",
                  "Lunch: Chickpea salad",
                  "Dinner: Tofu stir-fry with vegetables"],
        'low-carb': ["Breakfast: Scrambled eggs with avocado",
                     "Lunch: Grilled chicken with leafy greens",
                     "Dinner: Zucchini noodles with pesto sauce"],
        'high-protein': ["Breakfast: Greek yogurt with almonds",
                         "Lunch: Grilled salmon with asparagus",
                         "Dinner: Chicken breast with broccoli"]
    }

    return diet_plan.get(preference.lower(), ["Diet plan not found for this preference."])

# Main NutriAI bot to get food info and suggest a diet plan
def nutriAI_bot(food_item, preference):
    # Get nutritional info from Hugging Face model
    nutrients = get_nutritional_info_huggingface(food_item)

    # Suggest diet plan based on preference
    diet_plan = suggest_diet(preference)

    # Display results in a formatted way
    output_text = f"<h3>Nutritional Information for <strong>{food_item}</strong>:</h3><p>{nutrients}</p><br>"
    output_text += f"<h3>Suggested Diet Plan for <strong>{preference.capitalize()}</strong>:</h3><ul>"
    for item in diet_plan:
        output_text += f"<li>{item}</li>"
    output_text += "</ul>"

    return output_text

# Create widgets for user input
food_item_input = widgets.Text(
    description='Food Item:',
    placeholder='Enter a food item (e.g., Apple)',
    style={'description_width': 'initial'},
    layout=widgets.Layout(width='80%')
)

preference_input = widgets.Dropdown(
    options=['vegetarian', 'vegan', 'low-carb', 'high-protein'],
    value='vegetarian',
    description='Preference:',
    style={'description_width': 'initial'},
    layout=widgets.Layout(width='80%')
)

run_button = widgets.Button(
    description='Get Nutritional Info & Diet Plan',
    button_style='success',
    tooltip='Click to get info',
    layout=widgets.Layout(width='80%')
)

output_area = widgets.Output()

# HTML and CSS styling for the interface
def display_ui():
    # Styling the header and interface
    display(HTML("""
        <style>
            .header {
                text-align: center;
                font-size: 36px;
                font-weight: bold;
                color: #4CAF50;
                margin-bottom: 30px;
            }
            .output {
                font-size: 16px;
                color: #555555;
                margin-top: 20px;
            }
            .output h3 {
                color: #4CAF50;
            }
            .output ul {
                list-style-type: none;
                padding: 0;
            }
            .output li {
                font-size: 18px;
                padding: 5px 0;
            }
            .widget-inline-hbox .widget-label {
                font-size: 18px;
            }
        </style>
        <div class="header">NutriAI: Your Personalized Nutrition Assistant</div>
    """))

# Function to run when button is clicked
def on_button_click(b):
    with output_area:
        # Clear previous output
        output_area.clear_output()

        # Get user inputs
        food_item = food_item_input.value
        preference = preference_input.value

        # Run the NutriAI bot
        result = nutriAI_bot(food_item, preference)

        # Display the results in the styled format
        display(HTML(result))

# Link the button to the function
run_button.on_click(on_button_click)

# Display the UI elements
display_ui()
display(food_item_input, preference_input, run_button, output_area)